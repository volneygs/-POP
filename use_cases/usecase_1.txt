#################
# Use Case 2 #
#################

#openSystem/closeSystem - fileLoader/fileWriter
#openSystem

###################
#USER REGISTRATION#
###################
id1=register name="Fatima Bernardes" email="fatima@email.com.br" password="will_S2" birthdate="17/09/1962" image="resources/fatima.jpg"
id2=register name="Madonna" email="madonna@email.com" password="iamawesome" birthdate="16/08/1958" image="resources/madonna.jpg"
id3=register name="Jo Soares" email="jo@uol.com.br" password="!soares!" birthdate="16/01/1938" 

expectError "Error: Username field can't be empty." register name="" email="alguem@email.com.br" password="senha_besta" birthdate="10/10/2010"
expectError "Error: Username field can't be empty."  register name="  " email="alguem@email.com.br" password="senha_besta" birthdate="10/10/2010"
expectError "Error: Invalid email."  register name="Fulaninho" email="alguem@email" password="password_besta" birthdate="10/10/2010"
expectError "Error: Invalid date format."  register name="Fulaninho" email="alguem@email.com" password="password_besta" birthdate="1510/10/2010"
expectError "Error: Date doesn't exist."  register name="Fulaninho" email="alguem@email.com" password="password_besta" birthdate="32/10/2010"

expect "Fatima Bernardes" getUserInfo field="name" user=${id1}
#expect "1962-09-17" getUserInfo field="birthdate" user=${id1}
#expectError "The user's password is protected." getUserInfo. field="password" user=${id1}
#expect "resources/fatima.jpg" GetUserInfo field="picture" user=${id1}

#expect "Madonna" getUserInfo field="name"  user=${id2}
#expect "1958-08-16" getUserInfo field="birthdate" user=${id2}
#expectError "The user's password is protected." getUserInfo field="password" user=${id2}
#expect "resources/madonna.jpg" getUserInfo field="picture" user=${id2}

#expect "Jo Soares" getUserInfo field="name"  user=${id3}
#expect "1938-01-16" getUserInfo field="birthdate" user=${id3}
#expectError "The user's password is protected." getUserInfo field="password" user=${id3}
#expect "resources/default.jpg" getUserInfo field="picture" user=${id3}

#expectError "There's no registered user with this email adress (alguem@email.com)." getUserInfo field="name"  user="alguem@email.com"

############################################################################
#                              USER'S LOGIN                                #
############################################################################
# Notice that the "Error: Invalid email." has different parameters.        #
# In this case, he returns the informations of the logged user.            #
############################################################################

#login email="fatima@email.com.br" password="will_S2"
#expect "Fatima Bernardes" getUserInfo field="name"
#expect "resources/fatima.jpg" getUserInfo field="Picture"
#expectError "The user's password is protected." getUserInfo field="password"

#expectError "Failed to login. Another user is already logged: Fatima Bernardes." login email="madonna@email.com" password="iamawesome"
#logout
#expectError "Failed to logout. There's no user logged on +Pop at this moment." logout

#login email="madonna@email.com" password="iamawesome"
#expect "Madonna" getUserInfo field="name"
#logout

#expectError "Failed to login. There's no registered user with this email adress (gal_costa@email.com.br)." login email="gal_costa@email.com.br" password="vaca_profana"
#expectError "Failed to login. Invalid password." login email="fatima@email.com.br" password="nada a ver"

#login email="fatima@email.com.br" password="will_S2"
#expectError "Failed to closeSystem. A user is still logged in." closeSystem
#logout

#removeuser user=${id3}
#expectError "Failed to login. There's no registered user with this email adress (jo@uol.com.br)." login email="jo@uol.com.br" password="!soares!"

#closeSystem